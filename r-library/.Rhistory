ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
geom_vline(xintercept = 10)+
scale_x_continuous(breaks=0:30)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 1:7)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.major.x = element_line(),panel.grid.minor.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
geom_vline(xintercept = 10)+
scale_x_continuous(breaks=0:30)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.major.x = element_line(),panel.grid.minor.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
geom_vline(xintercept = 10)+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,colour="grey20")+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey20")+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15,colour=relevant, group=delay))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect()+
geom_point(aes(x=t,y=tau+delay/10+0.15))+
geom_point(aes(x=s,y=tau+delay/10+0.15),shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
windows = tibble(t = 1:20+0.5) %>% tidyr::crossing(tibble(tau = 1:7)) %>% mutate(s = t - tau, delay=t-10, omega=s-10, relevant = s<10 & t>=10, label = paste0("\u03C4 = ",tau) %>% ordered(paste0("\u03C4 = ",1:7)) )
ggplot(windows%>% filter(relevant),aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(fill="red")+
geom_rect(aes(xmin=s-10,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15), fill="red")+
geom_rect(aes(xmin=s-10,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="red")+
geom_rect(aes(xmin=s-10,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
ggplot(windows%>% filter(relevant))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="red")+
geom_rect(aes(xmin=s-5,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
library(tidyverse)
devtools::load_all("~/Git/standard-print-output/")
standardPrintOutput::setDefaults()
windows = tibble(t = 1:20+0.5) %>% tidyr::crossing(tibble(tau = 1:7)) %>% mutate(s = t - tau, delay=t-10, omega=s-10, relevant = s<10 & t>=10, label = paste0("\u03C4 = ",tau) %>% ordered(paste0("\u03C4 = ",1:7)) )
ggplot(windows%>% filter(relevant))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="red")+
geom_rect(aes(xmin=s-5,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
#geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = FALSE,
warning = FALSE,
message = FALSE,
error = TRUE
)
here::i_am("vignettes/cori-method-validation.Rmd")
source(here::here("vignettes/common-setup.R"))
source(here::here("vignettes/validation-functions.R"))
windows = tibble(t = 1:20+0.5) %>% tidyr::crossing(tibble(tau = 1:7)) %>% mutate(s = t - tau, delay=t-10, omega=s-10, relevant = s<10 & t>=10, label = paste0("\u03C4 = ",tau) %>% ordered(paste0("\u03C4 = ",1:7)) )
p = ggplot(windows%>% filter(relevant))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="red")+
geom_rect(aes(xmin=s-5,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
#geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
p %>% saveThirdPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/estimation-windows")
estim2 = J$CoriEstimator$new(r0Mean = 5,r0SD = 4,maxWindow = 14)
estim1 = J$CoriEstimator$new(r0Mean = 5,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
reference = function(ts, infectivityProfile)  {
estim1 = J$CoriEstimator$new(r0Mean = 5,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim1$withDefaultPrior()
estim1$atStartOfTimeseries()
estim1$selectSpecificWindow(7)
estim1$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
middleTs = function(ts, infectivityProfile) {
estim2 = J$CoriEstimator$new(r0Mean = 5,r0SD = 4,maxWindow = 14)
estim2$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim2$withDefaultPrior()
estim2$inMiddleOfTimeseries()
estim2$selectSpecificWindow(7)
estim2$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
adaptive = function(ts, infectivityProfile) {
estim3 = J$CoriEstimator$new(r0Mean = 5,r0SD = 4,maxWindow = 14)
estim3$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim3$withDefaultPrior()
estim3$inMiddleOfTimeseries()
estim3$selectSpecificWindow(7)
estim3$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
estimators = tibble(
model = forcats::as_factor(c(
"EpiEstim: 7 day",
"Start correction",
"Adaptive prior"
)),
estimFn = c(
reference,
middleTs,
adaptive
)
)
lagAnalysisResult = lagAnalysis(estimators)
qualityAnalysisResult = qualityAnalysis(estimators, lagAnalysisResult$modelLag)
adaptive = function(ts, infectivityProfile) {
estim3 = J$CoriEstimator$new(r0Mean = 5,r0SD = 4,maxWindow = 14)
estim3$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim3$withDefaultPrior()
estim3$inMiddleOfTimeseries()
estim3$selectSpecificWindow(7)
estim3$withAdaptivePrior(factor = 1.25)
estim3$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
estimators = tibble(
model = forcats::as_factor(c(
"EpiEstim: 7 day",
"Start correction",
"Adaptive prior"
)),
estimFn = c(
reference,
middleTs,
adaptive
)
)
lagAnalysisResult = lagAnalysis(estimators)
qualityAnalysisResult = qualityAnalysis(estimators, lagAnalysisResult$modelLag)
p3 = qualityAnalysisResult %>% estimationExamplePlot(subgroups = 2)
p3 %>% saveHalfPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/qualitative-prior-selection")
# reference implementation
reference = function(ts, infectivityProfile)  {
estim1 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim1$withDefaultPrior()
estim1$atStartOfTimeseries()
estim1$selectSpecificWindow(7)
estim1$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
adaptive = function(ts, infectivityProfile) {
estim3 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim3$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim3$withDefaultPrior()
estim3$inMiddleOfTimeseries()
estim3$selectSpecificWindow(7)
estim3$withAdaptivePrior(factor = 1.25)
estim3$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
estimators = tibble(
model = forcats::as_factor(c(
"EpiEstim: 7 day",
"Adaptive prior"
)),
estimFn = c(
reference,
adaptive
)
)
lagAnalysisResult = lagAnalysis(estimators)
qualityAnalysisResult = qualityAnalysis(estimators, lagAnalysisResult$modelLag)
p3 = qualityAnalysisResult %>% estimationExamplePlot(subgroups = 2)
p3 %>% saveHalfPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/qualitative-prior-selection")
lagAnalysisResult %>% lagPlot() %>% saveThirdPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/lagAnalysis")
lagAnalysisResult %>% lagPlot() %>% saveThirdPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/lag-prior-selection")
p = estimateSummaryPlot(qualityAnalysisResult)
p %>% saveHalfPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/error-summary-prior-selection")
# reference implementation
reference = function(ts, infectivityProfile)  {
estim1 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim1$withDefaultPrior()
estim1$atStartOfTimeseries()
estim1$selectSpecificWindow(7)
estim1$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
middleTs = function(ts, infectivityProfile)  {
estim1 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim1$withDefaultPrior()
estim1$inMiddleOfTimeseries()
estim1$selectSpecificWindow(7)
estim1$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
adaptive = function(ts, infectivityProfile) {
estim3 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim3$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim3$withDefaultPrior()
estim3$inMiddleOfTimeseries()
estim3$selectSpecificWindow(7)
estim3$withAdaptivePrior(factor = 1.25)
estim3$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
estimators = tibble(
model = forcats::as_factor(c(
"EpiEstim: 7 day",
"Start correction",
"Adaptive prior"
)),
estimFn = c(
reference,
middleTs
adaptive
# reference implementation
reference = function(ts, infectivityProfile)  {
estim1 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim1$withDefaultPrior()
estim1$atStartOfTimeseries()
estim1$selectSpecificWindow(7)
estim1$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
middleTs = function(ts, infectivityProfile)  {
estim1 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim1$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim1$withDefaultPrior()
estim1$inMiddleOfTimeseries()
estim1$selectSpecificWindow(7)
estim1$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
adaptive = function(ts, infectivityProfile) {
estim3 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
estim3$withInfectivityProfile(infectivityProfile, replace = TRUE)
estim3$withDefaultPrior()
estim3$inMiddleOfTimeseries()
estim3$selectSpecificWindow(7)
estim3$withAdaptivePrior(factor = 1.25)
estim3$estimateRt(ts %>% group_by(subgroup),dateColName = "date",incidenceColName = "value")
}
estimators = tibble(
model = forcats::as_factor(c(
"EpiEstim: 7 day",
"Start correction",
"Adaptive prior"
)),
estimFn = c(
reference,
middleTs,
adaptive
)
)
lagAnalysisResult = lagAnalysis(estimators)
qualityAnalysisResult = qualityAnalysis(estimators, lagAnalysisResult$modelLag)
p3 = qualityAnalysisResult %>% estimationExamplePlot(subgroups = 2)
p3 %>% saveHalfPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/qualitative-prior-selection")
lagAnalysisResult %>% lagPlot() %>% saveThirdPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/lag-prior-selection")
p = estimateSummaryPlot(qualityAnalysisResult)
p %>% saveHalfPageFigure("~/Dropbox/sarscov2/r-estimation-methodology/error-summary-prior-selection")
fs::path_ext("sdfsd.jpg")
fs::path_file("sdfsd.jpg")
fs::path_file("asdasd/sdfsd.jpg")
fs::path_ext_remove()
fs::path_ext_remove("sdfsdf/sdfsdf.jpg")
outputTo = function(directory = here::here("output")) {
return(function(filename, dated=TRUE) {
if(dated) filename = paste0(fs::path_ext_remove(filename),"-",Sys.Date(),".",fs::path_ext(filename))
paste0(path,"/",filename)
})
}
fs = outputTo()
fs("blah")
fs::path_dir("asdfad/asdas")
fs::path_dir("asdfad/asdas/")
?fs::path_norm
?fs::as_fs_path
here::here("output")
fs::fs_path(here::here("output"))
fs::path_norm("/media/data/Git/jepidemic/r-library/output/")
outputTo = function(directory = here::here("output")) {
directory = fs::path_norm(directory)
fs::dir_create(directory)
return(function(filename, dated=TRUE) {
if(dated) filename = paste0(fs::path_ext_remove(filename),"-",Sys.Date(),".",fs::path_ext(filename))
paste0(directory,"/",filename)
})
}
fs::path(here::here(),Sys.Date())
outputTo = function(directory = here::here("output"), datedFile=TRUE, datedSubdirectory=FALSE) {
directory = fs::path_norm(directory)
fs::dir_create(directory)
message("directing output to: ",directory)
return(function(filename) {
if(datedSubdirectory) {
directory = fs::path(directory,Sys.Date())
}
if(datedFile) filename = paste0(fs::path_ext_remove(filename),"-",Sys.Date(),".",fs::path_ext(filename))
fs::path(directory,filename)
})
}
tmp = outputTo()
tmp("test.pdf")
?output
output = function(directory = here::here("output"), datedFile=TRUE, datedSubdirectory=FALSE) {
directory = fs::path_norm(directory)
fs::dir_create(directory)
message("directing output to: ",directory)
return(function(filename) {
if(datedSubdirectory) {
directory = fs::path(directory,Sys.Date())
}
if(datedFile) filename = paste0(fs::path_ext_remove(filename),"-",Sys.Date(),".",fs::path_ext(filename))
fs::path(directory,filename)
})
}
devtools::load_all("~/Git/uk-covid-datatools/")
ukcovidtools::reload("~/Git/uk-covid-datatools/config.yml")
output = ukcovidtools::output("~/Dropbox/sarscov2/r-estimation-methodology")
windows = tibble(t = 1:20+0.5) %>% tidyr::crossing(tibble(tau = 1:7)) %>% mutate(s = t - tau, delay=t-10, omega=s-10, relevant = s<10 & t>=10, label = paste0("\u03C4 = ",tau) %>% ordered(paste0("\u03C4 = ",1:7)) )
p = ggplot(windows%>% filter(relevant))+
geom_rect(xmin = 10, xmax=11,ymin=0,ymax=Inf,fill="grey90",colour=NA)+
geom_rect(aes(xmin=s,xmax=t,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="red")+
geom_rect(aes(xmin=s-5,xmax=s,ymin=tau+delay/10+0.15,ymax=tau+delay/10+0.15),colour="grey60")+
geom_point(aes(x=t,y=tau+delay/10+0.15),colour="red")+
#geom_point(aes(x=s,y=tau+delay/10+0.15),colour="red",shape="diamond")+
scale_x_continuous(breaks=0:30+0.5,labels=0:30,minor_breaks = 0:31)+
scale_y_continuous(breaks=1:7+0.5,labels=paste0("\u03C4 = ",1:7),minor_breaks = 0:8)+
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line(),panel.grid.minor.x = element_line(),panel.grid.major.x = element_blank())+
coord_fixed(xlim=c(0.5,NA))+
guides(colour=guide_none())+
ylab(NULL)
p %>% saveThirdPageFigure(output("estimation-windows"))
fs::path_ext_set("dsdfsd","pdf")
fs::path_ext_set("dsdfsd",fs::path_ext("sdfsdf"))
fs::path_ext_set("dsdfsd",fs::path_ext("sdfsdf.pdf"))
devtools::load_all("~/Git/uk-covid-datatools/")
ukcovidtools::reload("~/Git/uk-covid-datatools/config.yml")
output = ukcovidtools::output("~/Dropbox/sarscov2/r-estimation-methodology")
p %>% saveThirdPageFigure(output("estimation-windows"))
?normalizePath
?s
?gam
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = FALSE,
warning = FALSE,
message = FALSE,
error = TRUE
)
here::i_am("vignettes/cori-method-validation.Rmd")
source(here::here("vignettes/common-setup.R"))
estim1 = J$CoriEstimator$new(r0Mean = 1.2,r0SD = 4,maxWindow = 14)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = FALSE,
warning = FALSE,
message = FALSE,
error = TRUE
)
here::i_am("vignettes/cori-method-validation.Rmd")
source(here::here("vignettes/common-setup.R"))
install.package("nakagami")
install.packages("nakagami")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = FALSE,
warning = FALSE,
message = FALSE,
error = TRUE
)
here::i_am("vignettes/cori-method-validation.Rmd")
source(here::here("vignettes/common-setup.R"))
devtools::install()
devtools::install()
source(here::here("vignettes/common-setup.R"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
echo = FALSE,
warning = FALSE,
message = FALSE,
error = TRUE
)
here::i_am("vignettes/cori-method-validation.Rmd")
source(here::here("vignettes/common-setup.R"))
source(here::here("vignettes/common-setup.R"))
source(here::here("vignettes/common-setup.R"))
debug(synth$getGrowthRateBasedDataset)
synthetic = standardSyntheticDataset()
synthetic = standardSyntheticDataset()
library(tidyverse)
synthetic = standardSyntheticDataset()
synthetic = standardSyntheticDataset()
reload()
devtools::load_all("~/Git/uk-covid-datatools/")
ukcovidtools::reload()
ukcovidtools::reload("~/Git/uk-covid-datatools/config.yml")
synthetic = standardSyntheticDataset()
reload = function() {
devtools::load_all("~/Git/uk-covid-datatools/")
ukcovidtools::reload("~/Git/uk-covid-datatools/config.yml")
}
reload()
synthetic = standardSyntheticDataset()
reload()
synthetic = standardSyntheticDataset()
reload()
synthetic = standardSyntheticDataset()
